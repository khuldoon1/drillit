{"ast":null,"code":"import F_Schlick from './F_Schlick.js';\nimport { shininess, specularColor } from '../../core/PropertyNode.js';\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { ShaderNode, float } from '../../shadernode/ShaderNode.js';\nconst G_BlinnPhong_Implicit = () => float(0.25);\nconst D_BlinnPhong = new ShaderNode(_ref => {\n  let {\n    dotNH\n  } = _ref;\n  return shininess.mul(0.5 / Math.PI).add(1.0).mul(dotNH.pow(shininess));\n});\nconst BRDF_BlinnPhong = new ShaderNode(_ref2 => {\n  let {\n    lightDirection\n  } = _ref2;\n  const halfDir = lightDirection.add(positionViewDirection).normalize();\n  const dotNH = transformedNormalView.dot(halfDir).clamp();\n  const dotVH = positionViewDirection.dot(halfDir).clamp();\n  const F = F_Schlick.call({\n    f0: specularColor,\n    f90: 1.0,\n    dotVH\n  });\n  const G = G_BlinnPhong_Implicit();\n  const D = D_BlinnPhong.call({\n    dotNH\n  });\n  return F.mul(G).mul(D);\n});\nexport default BRDF_BlinnPhong;","map":{"version":3,"names":["F_Schlick","shininess","specularColor","transformedNormalView","positionViewDirection","ShaderNode","float","G_BlinnPhong_Implicit","D_BlinnPhong","_ref","dotNH","mul","Math","PI","add","pow","BRDF_BlinnPhong","_ref2","lightDirection","halfDir","normalize","dot","clamp","dotVH","F","call","f0","f90","G","D"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/functions/BSDF/BRDF_BlinnPhong.js"],"sourcesContent":["import F_Schlick from './F_Schlick.js';\r\nimport { shininess, specularColor } from '../../core/PropertyNode.js';\r\nimport { transformedNormalView } from '../../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\r\nimport { ShaderNode, float } from '../../shadernode/ShaderNode.js';\r\n\r\nconst G_BlinnPhong_Implicit = () => float( 0.25 );\r\n\r\nconst D_BlinnPhong = new ShaderNode( ( { dotNH } ) => {\r\n\r\n\treturn shininess.mul( 0.5 / Math.PI ).add( 1.0 ).mul( dotNH.pow( shininess ) );\r\n\r\n} );\r\n\r\nconst BRDF_BlinnPhong = new ShaderNode( ( { lightDirection } ) => {\r\n\r\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\r\n\r\n\tconst dotNH = transformedNormalView.dot( halfDir ).clamp();\r\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\r\n\r\n\tconst F = F_Schlick.call( { f0: specularColor, f90: 1.0, dotVH } );\r\n\tconst G = G_BlinnPhong_Implicit();\r\n\tconst D = D_BlinnPhong.call( { dotNH } );\r\n\r\n\treturn F.mul( G ).mul( D );\r\n\r\n} );\r\n\r\nexport default BRDF_BlinnPhong;\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAASC,SAAS,EAAEC,aAAa,QAAQ,4BAA4B;AACrE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,qBAAqB,QAAQ,iCAAiC;AACvE,SAASC,UAAU,EAAEC,KAAK,QAAQ,gCAAgC;AAElE,MAAMC,qBAAqB,GAAGA,CAAA,KAAMD,KAAK,CAAE,IAAK,CAAC;AAEjD,MAAME,YAAY,GAAG,IAAIH,UAAU,CAAEI,IAAA,IAAiB;EAAA,IAAf;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAE/C,OAAOR,SAAS,CAACU,GAAG,CAAE,GAAG,GAAGC,IAAI,CAACC,EAAG,CAAC,CAACC,GAAG,CAAE,GAAI,CAAC,CAACH,GAAG,CAAED,KAAK,CAACK,GAAG,CAAEd,SAAU,CAAE,CAAC;AAE/E,CAAE,CAAC;AAEH,MAAMe,eAAe,GAAG,IAAIX,UAAU,CAAEY,KAAA,IAA0B;EAAA,IAAxB;IAAEC;EAAe,CAAC,GAAAD,KAAA;EAE3D,MAAME,OAAO,GAAGD,cAAc,CAACJ,GAAG,CAAEV,qBAAsB,CAAC,CAACgB,SAAS,CAAC,CAAC;EAEvE,MAAMV,KAAK,GAAGP,qBAAqB,CAACkB,GAAG,CAAEF,OAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;EAC1D,MAAMC,KAAK,GAAGnB,qBAAqB,CAACiB,GAAG,CAAEF,OAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;EAE1D,MAAME,CAAC,GAAGxB,SAAS,CAACyB,IAAI,CAAE;IAAEC,EAAE,EAAExB,aAAa;IAAEyB,GAAG,EAAE,GAAG;IAAEJ;EAAM,CAAE,CAAC;EAClE,MAAMK,CAAC,GAAGrB,qBAAqB,CAAC,CAAC;EACjC,MAAMsB,CAAC,GAAGrB,YAAY,CAACiB,IAAI,CAAE;IAAEf;EAAM,CAAE,CAAC;EAExC,OAAOc,CAAC,CAACb,GAAG,CAAEiB,CAAE,CAAC,CAACjB,GAAG,CAAEkB,CAAE,CAAC;AAE3B,CAAE,CAAC;AAEH,eAAeb,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}