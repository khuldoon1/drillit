{"ast":null,"code":"import InputNode from './InputNode.js';\nimport { addNodeClass } from './Node.js';\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\nclass UniformNode extends InputNode {\n  constructor(value) {\n    let nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(value, nodeType);\n    this.isUniformNode = true;\n  }\n  getUniformHash(builder) {\n    return this.getHash(builder);\n  }\n  generate(builder, output) {\n    const type = this.getNodeType(builder);\n    const hash = this.getUniformHash(builder);\n    let sharedNode = builder.getNodeFromHash(hash);\n    if (sharedNode === undefined) {\n      builder.setHashNode(this, hash);\n      sharedNode = this;\n    }\n    const sharedNodeType = sharedNode.getInputType(builder);\n    const nodeUniform = builder.getUniformFromNode(sharedNode, sharedNodeType, builder.shaderStage);\n    const propertyName = builder.getPropertyName(nodeUniform);\n    return builder.format(propertyName, type, output);\n  }\n}\nexport default UniformNode;\nexport const uniform = (arg1, arg2) => {\n  const nodeType = getConstNodeType(arg2 || arg1);\n\n  // @TODO: get ConstNode from .traverse() in the future\n  const value = arg1 && arg1.isNode === true ? arg1.node && arg1.node.value || arg1.value : arg1;\n  return nodeObject(new UniformNode(value, nodeType));\n};\naddNodeClass(UniformNode);","map":{"version":3,"names":["InputNode","addNodeClass","nodeObject","getConstNodeType","UniformNode","constructor","value","nodeType","arguments","length","undefined","isUniformNode","getUniformHash","builder","getHash","generate","output","type","getNodeType","hash","sharedNode","getNodeFromHash","setHashNode","sharedNodeType","getInputType","nodeUniform","getUniformFromNode","shaderStage","propertyName","getPropertyName","format","uniform","arg1","arg2","isNode","node"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/core/UniformNode.js"],"sourcesContent":["import InputNode from './InputNode.js';\r\nimport { addNodeClass } from './Node.js';\r\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\r\n\r\nclass UniformNode extends InputNode {\r\n\r\n\tconstructor( value, nodeType = null ) {\r\n\r\n\t\tsuper( value, nodeType );\r\n\r\n\t\tthis.isUniformNode = true;\r\n\r\n\t}\r\n\r\n\tgetUniformHash( builder ) {\r\n\r\n\t\treturn this.getHash( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder, output ) {\r\n\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tconst hash = this.getUniformHash( builder );\r\n\r\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\r\n\r\n\t\tif ( sharedNode === undefined ) {\r\n\r\n\t\t\tbuilder.setHashNode( this, hash );\r\n\r\n\t\t\tsharedNode = this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\r\n\r\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, sharedNodeType, builder.shaderStage );\r\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\r\n\r\n\t\treturn builder.format( propertyName, type, output );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default UniformNode;\r\n\r\nexport const uniform = ( arg1, arg2 ) => {\r\n\r\n\tconst nodeType = getConstNodeType( arg2 || arg1 );\r\n\r\n\t// @TODO: get ConstNode from .traverse() in the future\r\n\tconst value = ( arg1 && arg1.isNode === true ) ? ( arg1.node && arg1.node.value ) || arg1.value : arg1;\r\n\r\n\treturn nodeObject( new UniformNode( value, nodeType ) );\r\n\r\n};\r\n\r\naddNodeClass( UniformNode );\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,6BAA6B;AAE1E,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAEnCK,WAAWA,CAAEC,KAAK,EAAoB;IAAA,IAAlBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAElC,KAAK,CAAEF,KAAK,EAAEC,QAAS,CAAC;IAExB,IAAI,CAACI,aAAa,GAAG,IAAI;EAE1B;EAEAC,cAAcA,CAAEC,OAAO,EAAG;IAEzB,OAAO,IAAI,CAACC,OAAO,CAAED,OAAQ,CAAC;EAE/B;EAEAE,QAAQA,CAAEF,OAAO,EAAEG,MAAM,EAAG;IAE3B,MAAMC,IAAI,GAAG,IAAI,CAACC,WAAW,CAAEL,OAAQ,CAAC;IAExC,MAAMM,IAAI,GAAG,IAAI,CAACP,cAAc,CAAEC,OAAQ,CAAC;IAE3C,IAAIO,UAAU,GAAGP,OAAO,CAACQ,eAAe,CAAEF,IAAK,CAAC;IAEhD,IAAKC,UAAU,KAAKV,SAAS,EAAG;MAE/BG,OAAO,CAACS,WAAW,CAAE,IAAI,EAAEH,IAAK,CAAC;MAEjCC,UAAU,GAAG,IAAI;IAElB;IAEA,MAAMG,cAAc,GAAGH,UAAU,CAACI,YAAY,CAAEX,OAAQ,CAAC;IAEzD,MAAMY,WAAW,GAAGZ,OAAO,CAACa,kBAAkB,CAAEN,UAAU,EAAEG,cAAc,EAAEV,OAAO,CAACc,WAAY,CAAC;IACjG,MAAMC,YAAY,GAAGf,OAAO,CAACgB,eAAe,CAAEJ,WAAY,CAAC;IAE3D,OAAOZ,OAAO,CAACiB,MAAM,CAAEF,YAAY,EAAEX,IAAI,EAAED,MAAO,CAAC;EAEpD;AAED;AAEA,eAAeZ,WAAW;AAE1B,OAAO,MAAM2B,OAAO,GAAGA,CAAEC,IAAI,EAAEC,IAAI,KAAM;EAExC,MAAM1B,QAAQ,GAAGJ,gBAAgB,CAAE8B,IAAI,IAAID,IAAK,CAAC;;EAEjD;EACA,MAAM1B,KAAK,GAAK0B,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,IAAI,GAAOF,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACG,IAAI,CAAC7B,KAAK,IAAM0B,IAAI,CAAC1B,KAAK,GAAG0B,IAAI;EAEtG,OAAO9B,UAAU,CAAE,IAAIE,WAAW,CAAEE,KAAK,EAAEC,QAAS,CAAE,CAAC;AAExD,CAAC;AAEDN,YAAY,CAAEG,WAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}