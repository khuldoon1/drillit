{"ast":null,"code":"import DataMap from './DataMap.js';\nimport { AttributeType } from './Constants.js';\nimport { Uint32BufferAttribute, Uint16BufferAttribute } from 'three';\nfunction arrayNeedsUint32(array) {\n  // assumes larger values usually on last\n\n  for (let i = array.length - 1; i >= 0; --i) {\n    if (array[i] >= 65535) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n  }\n\n  return false;\n}\nfunction getWireframeVersion(geometry) {\n  return geometry.index !== null ? geometry.index.version : geometry.attributes.position.version;\n}\nfunction getWireframeIndex(geometry) {\n  const indices = [];\n  const geometryIndex = geometry.index;\n  const geometryPosition = geometry.attributes.position;\n  if (geometryIndex !== null) {\n    const array = geometryIndex.array;\n    for (let i = 0, l = array.length; i < l; i += 3) {\n      const a = array[i + 0];\n      const b = array[i + 1];\n      const c = array[i + 2];\n      indices.push(a, b, b, c, c, a);\n    }\n  } else {\n    const array = geometryPosition.array;\n    for (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n      const a = i + 0;\n      const b = i + 1;\n      const c = i + 2;\n      indices.push(a, b, b, c, c, a);\n    }\n  }\n  const attribute = new (arrayNeedsUint32(indices) ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n  attribute.version = getWireframeVersion(geometry);\n  return attribute;\n}\nclass Geometries extends DataMap {\n  constructor(attributes, info) {\n    super();\n    this.attributes = attributes;\n    this.info = info;\n    this.wireframes = new WeakMap();\n    this.attributeFrame = new WeakMap();\n  }\n  has(renderObject) {\n    const geometry = renderObject.geometry;\n    return super.has(geometry) && this.get(geometry).initialized === true;\n  }\n  update(renderObject) {\n    if (this.has(renderObject) === false) this.initGeometry(renderObject);\n    this.updateAttributes(renderObject);\n  }\n  initGeometry(renderObject) {\n    const geometry = renderObject.geometry;\n    const geometryData = this.get(geometry);\n    geometryData.initialized = true;\n    this.info.memory.geometries++;\n    const onDispose = () => {\n      this.info.memory.geometries--;\n      const index = geometry.index;\n      const geometryAttributes = renderObject.getAttributes();\n      if (index !== null) {\n        this.attributes.delete(index);\n      }\n      for (const geometryAttribute of geometryAttributes) {\n        this.attributes.delete(geometryAttribute);\n      }\n      const wireframeAttribute = this.wireframes.get(geometry);\n      if (wireframeAttribute !== undefined) {\n        this.attributes.delete(wireframeAttribute);\n      }\n      geometry.removeEventListener('dispose', onDispose);\n    };\n    geometry.addEventListener('dispose', onDispose);\n  }\n  updateAttributes(renderObject) {\n    const attributes = renderObject.getAttributes();\n    for (const attribute of attributes) {\n      this.updateAttribute(attribute, AttributeType.VERTEX);\n    }\n    const index = this.getIndex(renderObject);\n    if (index !== null) {\n      this.updateAttribute(index, AttributeType.INDEX);\n    }\n  }\n  updateAttribute(attribute, type) {\n    const frame = this.info.render.frame;\n    if (this.attributeFrame.get(attribute) !== frame) {\n      this.attributes.update(attribute, type);\n      this.attributeFrame.set(attribute, frame);\n    }\n  }\n  getIndex(renderObject) {\n    const {\n      geometry,\n      material\n    } = renderObject;\n    let index = geometry.index;\n    if (material.wireframe === true) {\n      const wireframes = this.wireframes;\n      let wireframeAttribute = wireframes.get(geometry);\n      if (wireframeAttribute === undefined) {\n        wireframeAttribute = getWireframeIndex(geometry);\n        wireframes.set(geometry, wireframeAttribute);\n      } else if (wireframeAttribute.version !== getWireframeVersion(geometry)) {\n        this.attributes.delete(wireframeAttribute);\n        wireframeAttribute = getWireframeIndex(geometry);\n        wireframes.set(geometry, wireframeAttribute);\n      }\n      index = wireframeAttribute;\n    }\n    return index;\n  }\n}\nexport default Geometries;","map":{"version":3,"names":["DataMap","AttributeType","Uint32BufferAttribute","Uint16BufferAttribute","arrayNeedsUint32","array","i","length","getWireframeVersion","geometry","index","version","attributes","position","getWireframeIndex","indices","geometryIndex","geometryPosition","l","a","b","c","push","attribute","Geometries","constructor","info","wireframes","WeakMap","attributeFrame","has","renderObject","get","initialized","update","initGeometry","updateAttributes","geometryData","memory","geometries","onDispose","geometryAttributes","getAttributes","delete","geometryAttribute","wireframeAttribute","undefined","removeEventListener","addEventListener","updateAttribute","VERTEX","getIndex","INDEX","type","frame","render","set","material","wireframe"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/renderers/common/Geometries.js"],"sourcesContent":["import DataMap from './DataMap.js';\r\nimport { AttributeType } from './Constants.js';\r\nimport { Uint32BufferAttribute, Uint16BufferAttribute } from 'three';\r\n\r\nfunction arrayNeedsUint32( array ) {\r\n\r\n\t// assumes larger values usually on last\r\n\r\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\r\n\r\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nfunction getWireframeVersion( geometry ) {\r\n\r\n\treturn ( geometry.index !== null ) ? geometry.index.version : geometry.attributes.position.version;\r\n\r\n}\r\n\r\nfunction getWireframeIndex( geometry ) {\r\n\r\n\tconst indices = [];\r\n\r\n\tconst geometryIndex = geometry.index;\r\n\tconst geometryPosition = geometry.attributes.position;\r\n\r\n\tif ( geometryIndex !== null ) {\r\n\r\n\t\tconst array = geometryIndex.array;\r\n\r\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\tconst a = array[ i + 0 ];\r\n\t\t\tconst b = array[ i + 1 ];\r\n\t\t\tconst c = array[ i + 2 ];\r\n\r\n\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tconst array = geometryPosition.array;\r\n\r\n\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\tconst a = i + 0;\r\n\t\t\tconst b = i + 1;\r\n\t\t\tconst c = i + 2;\r\n\r\n\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\tattribute.version = getWireframeVersion( geometry );\r\n\r\n\treturn attribute;\r\n\r\n}\r\n\r\nclass Geometries extends DataMap {\r\n\r\n\tconstructor( attributes, info ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.attributes = attributes;\r\n\t\tthis.info = info;\r\n\r\n\t\tthis.wireframes = new WeakMap();\r\n\t\tthis.attributeFrame = new WeakMap();\r\n\r\n\t}\r\n\r\n\thas( renderObject ) {\r\n\r\n\t\tconst geometry = renderObject.geometry;\r\n\r\n\t\treturn super.has( geometry ) && this.get( geometry ).initialized === true;\r\n\r\n\t}\r\n\r\n\tupdate( renderObject ) {\r\n\r\n\t\tif ( this.has( renderObject ) === false ) this.initGeometry( renderObject );\r\n\r\n\t\tthis.updateAttributes( renderObject );\r\n\r\n\t}\r\n\r\n\tinitGeometry( renderObject ) {\r\n\r\n\t\tconst geometry = renderObject.geometry;\r\n\t\tconst geometryData = this.get( geometry );\r\n\r\n\t\tgeometryData.initialized = true;\r\n\r\n\t\tthis.info.memory.geometries ++;\r\n\r\n\t\tconst onDispose = () => {\r\n\r\n\t\t\tthis.info.memory.geometries --;\r\n\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst geometryAttributes = renderObject.getAttributes();\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tthis.attributes.delete( index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( const geometryAttribute of geometryAttributes ) {\r\n\r\n\t\t\t\tthis.attributes.delete( geometryAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst wireframeAttribute = this.wireframes.get( geometry );\r\n\r\n\t\t\tif ( wireframeAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.attributes.delete( wireframeAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener( 'dispose', onDispose );\r\n\r\n\t\t};\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onDispose );\r\n\r\n\t}\r\n\r\n\tupdateAttributes( renderObject ) {\r\n\r\n\t\tconst attributes = renderObject.getAttributes();\r\n\r\n\t\tfor ( const attribute of attributes ) {\r\n\r\n\t\t\tthis.updateAttribute( attribute, AttributeType.VERTEX );\r\n\r\n\t\t}\r\n\r\n\t\tconst index = this.getIndex( renderObject );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.updateAttribute( index, AttributeType.INDEX );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateAttribute( attribute, type ) {\r\n\r\n\t\tconst frame = this.info.render.frame;\r\n\r\n\t\tif ( this.attributeFrame.get( attribute ) !== frame ) {\r\n\r\n\t\t\tthis.attributes.update( attribute, type );\r\n\r\n\t\t\tthis.attributeFrame.set( attribute, frame );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetIndex( renderObject ) {\r\n\r\n\t\tconst { geometry, material } = renderObject;\r\n\r\n\t\tlet index = geometry.index;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tconst wireframes = this.wireframes;\r\n\r\n\t\t\tlet wireframeAttribute = wireframes.get( geometry );\r\n\r\n\t\t\tif ( wireframeAttribute === undefined ) {\r\n\r\n\t\t\t\twireframeAttribute = getWireframeIndex( geometry );\r\n\r\n\t\t\t\twireframes.set( geometry, wireframeAttribute );\r\n\r\n\t\t\t} else if ( wireframeAttribute.version !== getWireframeVersion( geometry ) ) {\r\n\r\n\t\t\t\tthis.attributes.delete( wireframeAttribute );\r\n\r\n\t\t\t\twireframeAttribute = getWireframeIndex( geometry );\r\n\r\n\t\t\t\twireframes.set( geometry, wireframeAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tindex = wireframeAttribute;\r\n\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Geometries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}