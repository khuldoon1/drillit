{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nclass PositionNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PositionNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n  isGlobal() {\n    return true;\n  }\n  getHash( /*builder*/\n  ) {\n    return `position-${this.scope}`;\n  }\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n    if (scope === PositionNode.GEOMETRY) {\n      outputNode = attribute('position', 'vec3');\n    } else if (scope === PositionNode.LOCAL) {\n      outputNode = varying(positionGeometry);\n    } else if (scope === PositionNode.WORLD) {\n      const vertexPositionNode = modelWorldMatrix.mul(positionLocal);\n      outputNode = varying(vertexPositionNode);\n    } else if (scope === PositionNode.VIEW) {\n      const vertexPositionNode = modelViewMatrix.mul(positionLocal);\n      outputNode = varying(vertexPositionNode);\n    } else if (scope === PositionNode.VIEW_DIRECTION) {\n      const vertexPositionNode = positionView.negate();\n      outputNode = normalize(varying(vertexPositionNode));\n    } else if (scope === PositionNode.WORLD_DIRECTION) {\n      const vertexPositionNode = positionLocal.transformDirection(modelWorldMatrix);\n      outputNode = normalize(varying(vertexPositionNode));\n    }\n    return outputNode.build(builder, this.getNodeType(builder));\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nPositionNode.GEOMETRY = 'geometry';\nPositionNode.LOCAL = 'local';\nPositionNode.WORLD = 'world';\nPositionNode.WORLD_DIRECTION = 'worldDirection';\nPositionNode.VIEW = 'view';\nPositionNode.VIEW_DIRECTION = 'viewDirection';\nexport default PositionNode;\nexport const positionGeometry = nodeImmutable(PositionNode, PositionNode.GEOMETRY);\nexport const positionLocal = nodeImmutable(PositionNode, PositionNode.LOCAL);\nexport const positionWorld = nodeImmutable(PositionNode, PositionNode.WORLD);\nexport const positionWorldDirection = nodeImmutable(PositionNode, PositionNode.WORLD_DIRECTION);\nexport const positionView = nodeImmutable(PositionNode, PositionNode.VIEW);\nexport const positionViewDirection = nodeImmutable(PositionNode, PositionNode.VIEW_DIRECTION);\naddNodeClass(PositionNode);","map":{"version":3,"names":["Node","addNodeClass","attribute","varying","normalize","modelWorldMatrix","modelViewMatrix","nodeImmutable","PositionNode","constructor","scope","arguments","length","undefined","LOCAL","isGlobal","getHash","generate","builder","outputNode","GEOMETRY","positionGeometry","WORLD","vertexPositionNode","mul","positionLocal","VIEW","VIEW_DIRECTION","positionView","negate","WORLD_DIRECTION","transformDirection","build","getNodeType","serialize","data","deserialize","positionWorld","positionWorldDirection","positionViewDirection"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/accessors/PositionNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { modelWorldMatrix, modelViewMatrix } from './ModelNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass PositionNode extends Node {\r\n\r\n\tconstructor( scope = PositionNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tisGlobal() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `position-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet outputNode = null;\r\n\r\n\t\tif ( scope === PositionNode.GEOMETRY ) {\r\n\r\n\t\t\toutputNode = attribute( 'position', 'vec3' );\r\n\r\n\t\t} else if ( scope === PositionNode.LOCAL ) {\r\n\r\n\t\t\toutputNode = varying( positionGeometry );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD ) {\r\n\r\n\t\t\tconst vertexPositionNode = modelWorldMatrix.mul( positionLocal );\r\n\t\t\toutputNode = varying( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW ) {\r\n\r\n\t\t\tconst vertexPositionNode = modelViewMatrix.mul( positionLocal );\r\n\t\t\toutputNode = varying( vertexPositionNode );\r\n\r\n\t\t} else if ( scope === PositionNode.VIEW_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = positionView.negate();\r\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\r\n\r\n\t\t} else if ( scope === PositionNode.WORLD_DIRECTION ) {\r\n\r\n\t\t\tconst vertexPositionNode = positionLocal.transformDirection( modelWorldMatrix );\r\n\t\t\toutputNode = normalize( varying( vertexPositionNode ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPositionNode.GEOMETRY = 'geometry';\r\nPositionNode.LOCAL = 'local';\r\nPositionNode.WORLD = 'world';\r\nPositionNode.WORLD_DIRECTION = 'worldDirection';\r\nPositionNode.VIEW = 'view';\r\nPositionNode.VIEW_DIRECTION = 'viewDirection';\r\n\r\nexport default PositionNode;\r\n\r\nexport const positionGeometry = nodeImmutable( PositionNode, PositionNode.GEOMETRY );\r\nexport const positionLocal = nodeImmutable( PositionNode, PositionNode.LOCAL );\r\nexport const positionWorld = nodeImmutable( PositionNode, PositionNode.WORLD );\r\nexport const positionWorldDirection = nodeImmutable( PositionNode, PositionNode.WORLD_DIRECTION );\r\nexport const positionView = nodeImmutable( PositionNode, PositionNode.VIEW );\r\nexport const positionViewDirection = nodeImmutable( PositionNode, PositionNode.VIEW_DIRECTION );\r\n\r\naddNodeClass( PositionNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}