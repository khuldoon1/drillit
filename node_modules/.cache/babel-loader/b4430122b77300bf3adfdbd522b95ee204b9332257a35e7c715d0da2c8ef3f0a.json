{"ast":null,"code":"import AnalyticLightNode from './AnalyticLightNode.js';\nimport { lightTargetDirection } from './LightNode.js';\nimport { addLightNode } from './LightsNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { DirectionalLight } from 'three';\nclass DirectionalLightNode extends AnalyticLightNode {\n  constructor() {\n    let light = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(light);\n  }\n  construct(builder) {\n    super.construct(builder);\n    const lightColor = this.colorNode;\n    const lightDirection = lightTargetDirection(this.light);\n    const lightingModelFunctionNode = builder.context.lightingModelNode;\n    const reflectedLight = builder.context.reflectedLight;\n    if (lightingModelFunctionNode && lightingModelFunctionNode.direct) {\n      lightingModelFunctionNode.direct.call({\n        lightDirection,\n        lightColor,\n        reflectedLight\n      }, builder);\n    }\n  }\n}\nexport default DirectionalLightNode;\naddLightNode(DirectionalLight, DirectionalLightNode);\naddNodeClass(DirectionalLightNode);","map":{"version":3,"names":["AnalyticLightNode","lightTargetDirection","addLightNode","addNodeClass","DirectionalLight","DirectionalLightNode","constructor","light","arguments","length","undefined","construct","builder","lightColor","colorNode","lightDirection","lightingModelFunctionNode","context","lightingModelNode","reflectedLight","direct","call"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/lighting/DirectionalLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\r\nimport { lightTargetDirection } from './LightNode.js';\r\nimport { addLightNode } from './LightsNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\n\r\nimport { DirectionalLight } from 'three';\r\n\r\nclass DirectionalLightNode extends AnalyticLightNode {\r\n\r\n\tconstructor( light = null ) {\r\n\r\n\t\tsuper( light );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tsuper.construct( builder );\r\n\r\n\t\tconst lightColor = this.colorNode;\r\n\t\tconst lightDirection = lightTargetDirection( this.light );\r\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\r\n\t\tconst reflectedLight = builder.context.reflectedLight;\r\n\r\n\t\tif ( lightingModelFunctionNode && lightingModelFunctionNode.direct ) {\r\n\r\n\t\t\tlightingModelFunctionNode.direct.call( {\r\n\t\t\t\tlightDirection,\r\n\t\t\t\tlightColor,\r\n\t\t\t\treflectedLight\r\n\t\t\t}, builder );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default DirectionalLightNode;\r\n\r\naddLightNode( DirectionalLight, DirectionalLightNode );\r\n\r\naddNodeClass( DirectionalLightNode );\r\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AACtD,SAASC,oBAAoB,QAAQ,gBAAgB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,OAAO;AAExC,MAAMC,oBAAoB,SAASL,iBAAiB,CAAC;EAEpDM,WAAWA,CAAA,EAAiB;IAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAExB,KAAK,CAAED,KAAM,CAAC;EAEf;EAEAI,SAASA,CAAEC,OAAO,EAAG;IAEpB,KAAK,CAACD,SAAS,CAAEC,OAAQ,CAAC;IAE1B,MAAMC,UAAU,GAAG,IAAI,CAACC,SAAS;IACjC,MAAMC,cAAc,GAAGd,oBAAoB,CAAE,IAAI,CAACM,KAAM,CAAC;IACzD,MAAMS,yBAAyB,GAAGJ,OAAO,CAACK,OAAO,CAACC,iBAAiB;IACnE,MAAMC,cAAc,GAAGP,OAAO,CAACK,OAAO,CAACE,cAAc;IAErD,IAAKH,yBAAyB,IAAIA,yBAAyB,CAACI,MAAM,EAAG;MAEpEJ,yBAAyB,CAACI,MAAM,CAACC,IAAI,CAAE;QACtCN,cAAc;QACdF,UAAU;QACVM;MACD,CAAC,EAAEP,OAAQ,CAAC;IAEb;EAED;AAED;AAEA,eAAeP,oBAAoB;AAEnCH,YAAY,CAAEE,gBAAgB,EAAEC,oBAAqB,CAAC;AAEtDF,YAAY,CAAEE,oBAAqB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}