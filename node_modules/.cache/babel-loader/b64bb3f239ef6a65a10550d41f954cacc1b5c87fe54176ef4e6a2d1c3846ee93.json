{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { normalize } from '../math/MathNode.js';\nimport { cameraViewMatrix } from './CameraNode.js';\nimport { normalGeometry, normalLocal, normalView, normalWorld, transformedNormalView } from './NormalNode.js';\nimport { tangentGeometry, tangentLocal, tangentView, tangentWorld, transformedTangentView } from './TangentNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nclass BitangentNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BitangentNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n  getHash( /*builder*/\n  ) {\n    return `bitangent-${this.scope}`;\n  }\n  generate(builder) {\n    const scope = this.scope;\n    let crossNormalTangent;\n    if (scope === BitangentNode.GEOMETRY) {\n      crossNormalTangent = normalGeometry.cross(tangentGeometry);\n    } else if (scope === BitangentNode.LOCAL) {\n      crossNormalTangent = normalLocal.cross(tangentLocal);\n    } else if (scope === BitangentNode.VIEW) {\n      crossNormalTangent = normalView.cross(tangentView);\n    } else if (scope === BitangentNode.WORLD) {\n      crossNormalTangent = normalWorld.cross(tangentWorld);\n    }\n    const vertexNode = crossNormalTangent.mul(tangentGeometry.w).xyz;\n    const outputNode = normalize(varying(vertexNode));\n    return outputNode.build(builder, this.getNodeType(builder));\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nBitangentNode.GEOMETRY = 'geometry';\nBitangentNode.LOCAL = 'local';\nBitangentNode.VIEW = 'view';\nBitangentNode.WORLD = 'world';\nexport default BitangentNode;\nexport const bitangentGeometry = nodeImmutable(BitangentNode, BitangentNode.GEOMETRY);\nexport const bitangentLocal = nodeImmutable(BitangentNode, BitangentNode.LOCAL);\nexport const bitangentView = nodeImmutable(BitangentNode, BitangentNode.VIEW);\nexport const bitangentWorld = nodeImmutable(BitangentNode, BitangentNode.WORLD);\nexport const transformedBitangentView = normalize(transformedNormalView.cross(transformedTangentView).mul(tangentGeometry.w));\nexport const transformedBitangentWorld = normalize(transformedBitangentView.transformDirection(cameraViewMatrix));\naddNodeClass(BitangentNode);","map":{"version":3,"names":["Node","addNodeClass","varying","normalize","cameraViewMatrix","normalGeometry","normalLocal","normalView","normalWorld","transformedNormalView","tangentGeometry","tangentLocal","tangentView","tangentWorld","transformedTangentView","nodeImmutable","BitangentNode","constructor","scope","arguments","length","undefined","LOCAL","getHash","generate","builder","crossNormalTangent","GEOMETRY","cross","VIEW","WORLD","vertexNode","mul","w","xyz","outputNode","build","getNodeType","serialize","data","deserialize","bitangentGeometry","bitangentLocal","bitangentView","bitangentWorld","transformedBitangentView","transformedBitangentWorld","transformDirection"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/accessors/BitangentNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\r\nimport { varying } from '../core/VaryingNode.js';\r\nimport { normalize } from '../math/MathNode.js';\r\nimport { cameraViewMatrix } from './CameraNode.js';\r\nimport { normalGeometry, normalLocal, normalView, normalWorld, transformedNormalView } from './NormalNode.js';\r\nimport { tangentGeometry, tangentLocal, tangentView, tangentWorld, transformedTangentView } from './TangentNode.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass BitangentNode extends Node {\r\n\r\n\tconstructor( scope = BitangentNode.LOCAL ) {\r\n\r\n\t\tsuper( 'vec3' );\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t}\r\n\r\n\tgetHash( /*builder*/ ) {\r\n\r\n\t\treturn `bitangent-${this.scope}`;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet crossNormalTangent;\r\n\r\n\t\tif ( scope === BitangentNode.GEOMETRY ) {\r\n\r\n\t\t\tcrossNormalTangent = normalGeometry.cross( tangentGeometry );\r\n\r\n\t\t} else if ( scope === BitangentNode.LOCAL ) {\r\n\r\n\t\t\tcrossNormalTangent = normalLocal.cross( tangentLocal );\r\n\r\n\t\t} else if ( scope === BitangentNode.VIEW ) {\r\n\r\n\t\t\tcrossNormalTangent = normalView.cross( tangentView );\r\n\r\n\t\t} else if ( scope === BitangentNode.WORLD ) {\r\n\r\n\t\t\tcrossNormalTangent = normalWorld.cross( tangentWorld );\r\n\r\n\t\t}\r\n\r\n\t\tconst vertexNode = crossNormalTangent.mul( tangentGeometry.w ).xyz;\r\n\r\n\t\tconst outputNode = normalize( varying( vertexNode ) );\r\n\r\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nBitangentNode.GEOMETRY = 'geometry';\r\nBitangentNode.LOCAL = 'local';\r\nBitangentNode.VIEW = 'view';\r\nBitangentNode.WORLD = 'world';\r\n\r\nexport default BitangentNode;\r\n\r\nexport const bitangentGeometry = nodeImmutable( BitangentNode, BitangentNode.GEOMETRY );\r\nexport const bitangentLocal = nodeImmutable( BitangentNode, BitangentNode.LOCAL );\r\nexport const bitangentView = nodeImmutable( BitangentNode, BitangentNode.VIEW );\r\nexport const bitangentWorld = nodeImmutable( BitangentNode, BitangentNode.WORLD );\r\nexport const transformedBitangentView = normalize( transformedNormalView.cross( transformedTangentView ).mul( tangentGeometry.w ) );\r\nexport const transformedBitangentWorld = normalize( transformedBitangentView.transformDirection( cameraViewMatrix ) );\r\n\r\naddNodeClass( BitangentNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}