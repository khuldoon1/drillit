{"ast":null,"code":"import { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\n\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(size, options);\n    this.isCubeRenderTarget = true;\n  }\n  fromEquirectangularTexture(renderer, texture) {\n    const currentMinFilter = texture.minFilter;\n    const currentGenerateMipmaps = texture.generateMipmaps;\n    texture.generateMipmaps = true;\n    this.texture.type = texture.type;\n    this.texture.colorSpace = texture.colorSpace;\n    this.texture.generateMipmaps = texture.generateMipmaps;\n    this.texture.minFilter = texture.minFilter;\n    this.texture.magFilter = texture.magFilter;\n    const geometry = new BoxGeometry(5, 5, 5);\n    const uvNode = equirectUV(positionWorldDirection);\n    const material = createNodeMaterialFromType('MeshBasicNodeMaterial');\n    material.colorNode = TSL_Texture(texture, uvNode, 0);\n    material.side = BackSide;\n    material.blending = NoBlending;\n    const mesh = new Mesh(geometry, material);\n    const scene = new Scene();\n    scene.add(mesh);\n\n    // Avoid blurred poles\n    if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n    const camera = new CubeCamera(1, 10, this);\n    camera.update(renderer, scene);\n    texture.minFilter = currentMinFilter;\n    texture.currentGenerateMipmaps = currentGenerateMipmaps;\n    mesh.geometry.dispose();\n    mesh.material.dispose();\n    return this;\n  }\n}\nexport default CubeRenderTarget;","map":{"version":3,"names":["WebGLCubeRenderTarget","Scene","CubeCamera","BoxGeometry","Mesh","BackSide","NoBlending","LinearFilter","LinearMipmapLinearFilter","equirectUV","texture","TSL_Texture","positionWorldDirection","createNodeMaterialFromType","CubeRenderTarget","constructor","size","arguments","length","undefined","options","isCubeRenderTarget","fromEquirectangularTexture","renderer","currentMinFilter","minFilter","currentGenerateMipmaps","generateMipmaps","type","colorSpace","magFilter","geometry","uvNode","material","colorNode","side","blending","mesh","scene","add","camera","update","dispose"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/renderers/common/CubeRenderTarget.js"],"sourcesContent":["import { WebGLCubeRenderTarget, Scene, CubeCamera, BoxGeometry, Mesh, BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from 'three';\r\nimport { equirectUV } from '../../nodes/utils/EquirectUVNode.js';\r\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\r\nimport { positionWorldDirection } from '../../nodes/accessors/PositionNode.js';\r\nimport { createNodeMaterialFromType } from '../../nodes/materials/NodeMaterial.js';\r\n\r\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\r\n\r\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\r\n\r\n\tconstructor( size = 1, options = {} ) {\r\n\r\n\t\tsuper( size, options );\r\n\r\n\t\tthis.isCubeRenderTarget = true;\r\n\r\n\t}\r\n\r\n\tfromEquirectangularTexture( renderer, texture ) {\r\n\r\n\t\tconst currentMinFilter = texture.minFilter;\r\n\t\tconst currentGenerateMipmaps = texture.generateMipmaps;\r\n\r\n\t\ttexture.generateMipmaps = true;\r\n\r\n\t\tthis.texture.type = texture.type;\r\n\t\tthis.texture.colorSpace = texture.colorSpace;\r\n\r\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\tthis.texture.magFilter = texture.magFilter;\r\n\r\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\r\n\r\n\t\tconst uvNode = equirectUV( positionWorldDirection );\r\n\r\n\t\tconst material = createNodeMaterialFromType( 'MeshBasicNodeMaterial' );\r\n\t\tmaterial.colorNode = TSL_Texture( texture, uvNode, 0 );\r\n\t\tmaterial.side = BackSide;\r\n\t\tmaterial.blending = NoBlending;\r\n\r\n\t\tconst mesh = new Mesh( geometry, material );\r\n\r\n\t\tconst scene = new Scene();\r\n\t\tscene.add( mesh );\r\n\r\n\t\t// Avoid blurred poles\r\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n\r\n\t\tconst camera = new CubeCamera( 1, 10, this );\r\n\t\tcamera.update( renderer, scene );\r\n\r\n\t\ttexture.minFilter = currentMinFilter;\r\n\t\ttexture.currentGenerateMipmaps = currentGenerateMipmaps;\r\n\r\n\t\tmesh.geometry.dispose();\r\n\t\tmesh.material.dispose();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default CubeRenderTarget;\r\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,YAAY,EAAEC,wBAAwB,QAAQ,OAAO;AACjJ,SAASC,UAAU,QAAQ,qCAAqC;AAChE,SAASC,OAAO,IAAIC,WAAW,QAAQ,sCAAsC;AAC7E,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,0BAA0B,QAAQ,uCAAuC;;AAElF;;AAEA,MAAMC,gBAAgB,SAASd,qBAAqB,CAAC;EAEpDe,WAAWA,CAAA,EAA2B;IAAA,IAAzBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAElC,KAAK,CAAED,IAAI,EAAEI,OAAQ,CAAC;IAEtB,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAE/B;EAEAC,0BAA0BA,CAAEC,QAAQ,EAAEb,OAAO,EAAG;IAE/C,MAAMc,gBAAgB,GAAGd,OAAO,CAACe,SAAS;IAC1C,MAAMC,sBAAsB,GAAGhB,OAAO,CAACiB,eAAe;IAEtDjB,OAAO,CAACiB,eAAe,GAAG,IAAI;IAE9B,IAAI,CAACjB,OAAO,CAACkB,IAAI,GAAGlB,OAAO,CAACkB,IAAI;IAChC,IAAI,CAAClB,OAAO,CAACmB,UAAU,GAAGnB,OAAO,CAACmB,UAAU;IAE5C,IAAI,CAACnB,OAAO,CAACiB,eAAe,GAAGjB,OAAO,CAACiB,eAAe;IACtD,IAAI,CAACjB,OAAO,CAACe,SAAS,GAAGf,OAAO,CAACe,SAAS;IAC1C,IAAI,CAACf,OAAO,CAACoB,SAAS,GAAGpB,OAAO,CAACoB,SAAS;IAE1C,MAAMC,QAAQ,GAAG,IAAI5B,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE3C,MAAM6B,MAAM,GAAGvB,UAAU,CAAEG,sBAAuB,CAAC;IAEnD,MAAMqB,QAAQ,GAAGpB,0BAA0B,CAAE,uBAAwB,CAAC;IACtEoB,QAAQ,CAACC,SAAS,GAAGvB,WAAW,CAAED,OAAO,EAAEsB,MAAM,EAAE,CAAE,CAAC;IACtDC,QAAQ,CAACE,IAAI,GAAG9B,QAAQ;IACxB4B,QAAQ,CAACG,QAAQ,GAAG9B,UAAU;IAE9B,MAAM+B,IAAI,GAAG,IAAIjC,IAAI,CAAE2B,QAAQ,EAAEE,QAAS,CAAC;IAE3C,MAAMK,KAAK,GAAG,IAAIrC,KAAK,CAAC,CAAC;IACzBqC,KAAK,CAACC,GAAG,CAAEF,IAAK,CAAC;;IAEjB;IACA,IAAK3B,OAAO,CAACe,SAAS,KAAKjB,wBAAwB,EAAGE,OAAO,CAACe,SAAS,GAAGlB,YAAY;IAEtF,MAAMiC,MAAM,GAAG,IAAItC,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAK,CAAC;IAC5CsC,MAAM,CAACC,MAAM,CAAElB,QAAQ,EAAEe,KAAM,CAAC;IAEhC5B,OAAO,CAACe,SAAS,GAAGD,gBAAgB;IACpCd,OAAO,CAACgB,sBAAsB,GAAGA,sBAAsB;IAEvDW,IAAI,CAACN,QAAQ,CAACW,OAAO,CAAC,CAAC;IACvBL,IAAI,CAACJ,QAAQ,CAACS,OAAO,CAAC,CAAC;IAEvB,OAAO,IAAI;EAEZ;AAED;AAEA,eAAe5B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}