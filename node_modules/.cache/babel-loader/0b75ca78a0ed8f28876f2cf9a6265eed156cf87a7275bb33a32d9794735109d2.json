{"ast":null,"code":"import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { directionToColor } from '../utils/PackingNode.js';\nimport { materialOpacity } from '../accessors/MaterialNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\nimport { MeshNormalMaterial } from 'three';\nconst defaultValues = new MeshNormalMaterial();\nclass MeshNormalNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshNormalNodeMaterial = true;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  constructDiffuseColor(_ref) {\n    let {\n      stack\n    } = _ref;\n    const opacityNode = this.opacityNode ? float(this.opacityNode) : materialOpacity;\n    stack.assign(diffuseColor, vec4(directionToColor(transformedNormalView), opacityNode));\n  }\n  copy(source) {\n    this.opacityNode = source.opacityNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n}\nexport default MeshNormalNodeMaterial;\naddNodeMaterial(MeshNormalNodeMaterial);","map":{"version":3,"names":["NodeMaterial","addNodeMaterial","diffuseColor","directionToColor","materialOpacity","transformedNormalView","float","vec4","MeshNormalMaterial","defaultValues","MeshNormalNodeMaterial","constructor","parameters","isMeshNormalNodeMaterial","setDefaultValues","setValues","constructDiffuseColor","_ref","stack","opacityNode","assign","copy","source","positionNode"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/materials/MeshNormalNodeMaterial.js"],"sourcesContent":["import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\r\nimport { diffuseColor } from '../core/PropertyNode.js';\r\nimport { directionToColor } from '../utils/PackingNode.js';\r\nimport { materialOpacity } from '../accessors/MaterialNode.js';\r\nimport { transformedNormalView } from '../accessors/NormalNode.js';\r\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { MeshNormalMaterial } from 'three';\r\n\r\nconst defaultValues = new MeshNormalMaterial();\r\n\r\nclass MeshNormalNodeMaterial extends NodeMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshNormalNodeMaterial = true;\r\n\r\n\t\tthis.setDefaultValues( defaultValues );\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tconstructDiffuseColor( { stack } ) {\r\n\r\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\r\n\r\n\t\tstack.assign( diffuseColor, vec4( directionToColor( transformedNormalView ), opacityNode ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.opacityNode = source.opacityNode;\r\n\r\n\t\tthis.positionNode = source.positionNode;\r\n\r\n\t\treturn super.copy( source );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default MeshNormalNodeMaterial;\r\n\r\naddNodeMaterial( MeshNormalNodeMaterial );\r\n"],"mappings":"AAAA,OAAOA,YAAY,IAAIC,eAAe,QAAQ,mBAAmB;AACjE,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,KAAK,EAAEC,IAAI,QAAQ,6BAA6B;AAEzD,SAASC,kBAAkB,QAAQ,OAAO;AAE1C,MAAMC,aAAa,GAAG,IAAID,kBAAkB,CAAC,CAAC;AAE9C,MAAME,sBAAsB,SAASV,YAAY,CAAC;EAEjDW,WAAWA,CAAEC,UAAU,EAAG;IAEzB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,wBAAwB,GAAG,IAAI;IAEpC,IAAI,CAACC,gBAAgB,CAAEL,aAAc,CAAC;IAEtC,IAAI,CAACM,SAAS,CAAEH,UAAW,CAAC;EAE7B;EAEAI,qBAAqBA,CAAAC,IAAA,EAAc;IAAA,IAAZ;MAAEC;IAAM,CAAC,GAAAD,IAAA;IAE/B,MAAME,WAAW,GAAG,IAAI,CAACA,WAAW,GAAGb,KAAK,CAAE,IAAI,CAACa,WAAY,CAAC,GAAGf,eAAe;IAElFc,KAAK,CAACE,MAAM,CAAElB,YAAY,EAAEK,IAAI,CAAEJ,gBAAgB,CAAEE,qBAAsB,CAAC,EAAEc,WAAY,CAAE,CAAC;EAE7F;EAEAE,IAAIA,CAAEC,MAAM,EAAG;IAEd,IAAI,CAACH,WAAW,GAAGG,MAAM,CAACH,WAAW;IAErC,IAAI,CAACI,YAAY,GAAGD,MAAM,CAACC,YAAY;IAEvC,OAAO,KAAK,CAACF,IAAI,CAAEC,MAAO,CAAC;EAE5B;AAED;AAEA,eAAeZ,sBAAsB;AAErCT,eAAe,CAAES,sBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}