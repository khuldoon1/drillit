{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\nimport { Vector2 } from 'three';\nlet resolution;\nclass ViewportNode extends Node {\n  constructor(scope) {\n    super();\n    this.scope = scope;\n    this.isViewportNode = true;\n  }\n  getNodeType() {\n    return this.scope === ViewportNode.COORDINATE ? 'vec4' : 'vec2';\n  }\n  getUpdateType() {\n    let updateType = NodeUpdateType.NONE;\n    if (this.scope === ViewportNode.RESOLUTION) {\n      updateType = NodeUpdateType.FRAME;\n    }\n    this.updateType = updateType;\n    return updateType;\n  }\n  update(_ref) {\n    let {\n      renderer\n    } = _ref;\n    renderer.getDrawingBufferSize(resolution);\n  }\n  construct(builder) {\n    const scope = this.scope;\n    if (scope === ViewportNode.COORDINATE) return;\n    let output = null;\n    if (scope === ViewportNode.RESOLUTION) {\n      output = uniform(resolution || (resolution = new Vector2()));\n    } else {\n      const coordinateNode = vec2(new ViewportNode(ViewportNode.COORDINATE));\n      const resolutionNode = new ViewportNode(ViewportNode.RESOLUTION);\n      output = coordinateNode.div(resolutionNode);\n      let outX = output.x;\n      let outY = output.y;\n      if (/top/i.test(scope) && builder.isFlipY()) outY = outY.oneMinus();else if (/bottom/i.test(scope) && builder.isFlipY() === false) outY = outY.oneMinus();\n      if (/right/i.test(scope)) outX = outX.oneMinus();\n      output = vec2(outX, outY);\n    }\n    return output;\n  }\n  generate(builder) {\n    if (this.scope === ViewportNode.COORDINATE) {\n      return builder.getFragCoord();\n    }\n    return super.generate(builder);\n  }\n}\nViewportNode.COORDINATE = 'coordinate';\nViewportNode.RESOLUTION = 'resolution';\nViewportNode.TOP_LEFT = 'topLeft';\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\nViewportNode.TOP_RIGHT = 'topRight';\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\nexport default ViewportNode;\nexport const viewportCoordinate = nodeImmutable(ViewportNode, ViewportNode.COORDINATE);\nexport const viewportResolution = nodeImmutable(ViewportNode, ViewportNode.RESOLUTION);\nexport const viewportTopLeft = nodeImmutable(ViewportNode, ViewportNode.TOP_LEFT);\nexport const viewportBottomLeft = nodeImmutable(ViewportNode, ViewportNode.BOTTOM_LEFT);\nexport const viewportTopRight = nodeImmutable(ViewportNode, ViewportNode.TOP_RIGHT);\nexport const viewportBottomRight = nodeImmutable(ViewportNode, ViewportNode.BOTTOM_RIGHT);\naddNodeClass(ViewportNode);","map":{"version":3,"names":["Node","addNodeClass","NodeUpdateType","uniform","nodeImmutable","vec2","Vector2","resolution","ViewportNode","constructor","scope","isViewportNode","getNodeType","COORDINATE","getUpdateType","updateType","NONE","RESOLUTION","FRAME","update","_ref","renderer","getDrawingBufferSize","construct","builder","output","coordinateNode","resolutionNode","div","outX","x","outY","y","test","isFlipY","oneMinus","generate","getFragCoord","TOP_LEFT","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","viewportCoordinate","viewportResolution","viewportTopLeft","viewportBottomLeft","viewportTopRight","viewportBottomRight"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/display/ViewportNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\r\n\r\nimport { Vector2 } from 'three';\r\n\r\nlet resolution;\r\n\r\nclass ViewportNode extends Node {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\r\n\t\tthis.isViewportNode = true;\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\treturn this.scope === ViewportNode.COORDINATE ? 'vec4' : 'vec2';\r\n\r\n\t}\r\n\r\n\tgetUpdateType() {\r\n\r\n\t\tlet updateType = NodeUpdateType.NONE;\r\n\r\n\t\tif ( this.scope === ViewportNode.RESOLUTION ) {\r\n\r\n\t\t\tupdateType = NodeUpdateType.FRAME;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateType = updateType;\r\n\r\n\t\treturn updateType;\r\n\r\n\t}\r\n\r\n\tupdate( { renderer } ) {\r\n\r\n\t\trenderer.getDrawingBufferSize( resolution );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === ViewportNode.COORDINATE ) return;\r\n\r\n\t\tlet output = null;\r\n\r\n\t\tif ( scope === ViewportNode.RESOLUTION ) {\r\n\r\n\t\t\toutput = uniform( resolution || ( resolution = new Vector2() ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst coordinateNode = vec2( new ViewportNode( ViewportNode.COORDINATE ) );\r\n\t\t\tconst resolutionNode = new ViewportNode( ViewportNode.RESOLUTION );\r\n\r\n\t\t\toutput = coordinateNode.div( resolutionNode );\r\n\r\n\t\t\tlet outX = output.x;\r\n\t\t\tlet outY = output.y;\r\n\r\n\t\t\tif ( /top/i.test( scope ) && builder.isFlipY() ) outY = outY.oneMinus();\r\n\t\t\telse if ( /bottom/i.test( scope ) && builder.isFlipY() === false ) outY = outY.oneMinus();\r\n\r\n\t\t\tif ( /right/i.test( scope ) ) outX = outX.oneMinus();\r\n\r\n\t\t\toutput = vec2( outX, outY );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tif ( this.scope === ViewportNode.COORDINATE ) {\r\n\r\n\t\t\treturn builder.getFragCoord();\r\n\r\n\t\t}\r\n\r\n\t\treturn super.generate( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nViewportNode.COORDINATE = 'coordinate';\r\nViewportNode.RESOLUTION = 'resolution';\r\nViewportNode.TOP_LEFT = 'topLeft';\r\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\r\nViewportNode.TOP_RIGHT = 'topRight';\r\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\r\n\r\nexport default ViewportNode;\r\n\r\nexport const viewportCoordinate = nodeImmutable( ViewportNode, ViewportNode.COORDINATE );\r\nexport const viewportResolution = nodeImmutable( ViewportNode, ViewportNode.RESOLUTION );\r\nexport const viewportTopLeft = nodeImmutable( ViewportNode, ViewportNode.TOP_LEFT );\r\nexport const viewportBottomLeft = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_LEFT );\r\nexport const viewportTopRight = nodeImmutable( ViewportNode, ViewportNode.TOP_RIGHT );\r\nexport const viewportBottomRight = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_RIGHT );\r\n\r\naddNodeClass( ViewportNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}