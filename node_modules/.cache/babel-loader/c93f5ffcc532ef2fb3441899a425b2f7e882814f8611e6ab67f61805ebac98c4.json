{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { ShaderNode, nodeProxy } from '../shadernode/ShaderNode.js';\nimport { attribute } from '../core/AttributeNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { buffer } from './BufferNode.js';\nimport { normalLocal } from './NormalNode.js';\nimport { positionLocal } from './PositionNode.js';\nimport { tangentLocal } from './TangentNode.js';\nconst Skinning = new ShaderNode((inputs, _ref, builder) => {\n  let {} = _ref;\n  const {\n    index,\n    weight,\n    bindMatrix,\n    bindMatrixInverse,\n    boneMatrices\n  } = inputs;\n  const boneMatX = boneMatrices.element(index.x);\n  const boneMatY = boneMatrices.element(index.y);\n  const boneMatZ = boneMatrices.element(index.z);\n  const boneMatW = boneMatrices.element(index.w);\n\n  // POSITION\n\n  const skinVertex = bindMatrix.mul(positionLocal);\n  const skinned = add(boneMatX.mul(weight.x).mul(skinVertex), boneMatY.mul(weight.y).mul(skinVertex), boneMatZ.mul(weight.z).mul(skinVertex), boneMatW.mul(weight.w).mul(skinVertex));\n  const skinPosition = bindMatrixInverse.mul(skinned).xyz;\n\n  // NORMAL\n\n  let skinMatrix = add(weight.x.mul(boneMatX), weight.y.mul(boneMatY), weight.z.mul(boneMatZ), weight.w.mul(boneMatW));\n  skinMatrix = bindMatrixInverse.mul(skinMatrix).mul(bindMatrix);\n  const skinNormal = skinMatrix.transformDirection(normalLocal).xyz;\n\n  // ASSIGNS\n\n  positionLocal.assign(skinPosition).build(builder); // @TODO: For some reason this doesn't work as stack.assign( positionLocal, skinPosition )?\n  normalLocal.assign(skinNormal).build(builder);\n  if (builder.hasGeometryAttribute('tangent')) {\n    tangentLocal.assign(skinNormal).build(builder);\n  }\n});\nclass SkinningNode extends Node {\n  constructor(skinnedMesh) {\n    super('void');\n    this.skinnedMesh = skinnedMesh;\n    this.updateType = NodeUpdateType.OBJECT;\n\n    //\n\n    this.skinIndexNode = attribute('skinIndex', 'uvec4');\n    this.skinWeightNode = attribute('skinWeight', 'vec4');\n    this.bindMatrixNode = uniform(skinnedMesh.bindMatrix, 'mat4');\n    this.bindMatrixInverseNode = uniform(skinnedMesh.bindMatrixInverse, 'mat4');\n    this.boneMatricesNode = buffer(skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length);\n  }\n  generate(builder) {\n    /*return new ShaderNode( ( {}, stack, builder ) => Skinning.call( {\r\n    \tindex: this.skinIndexNode,\r\n    \tweight: this.skinWeightNode,\r\n    \tbindMatrix: this.bindMatrixNode,\r\n    \tbindMatrixInverse: this.bindMatrixInverseNode,\r\n    \tboneMatrices: this.boneMatricesNode\r\n    }, stack, builder ) ).build( builder );*/\n    Skinning.call({\n      index: this.skinIndexNode,\n      weight: this.skinWeightNode,\n      bindMatrix: this.bindMatrixNode,\n      bindMatrixInverse: this.bindMatrixInverseNode,\n      boneMatrices: this.boneMatricesNode\n    }, {}, builder);\n  }\n  update() {\n    this.skinnedMesh.skeleton.update();\n  }\n}\nexport default SkinningNode;\nexport const skinning = nodeProxy(SkinningNode);\naddNodeClass(SkinningNode);","map":{"version":3,"names":["Node","addNodeClass","NodeUpdateType","ShaderNode","nodeProxy","attribute","uniform","add","buffer","normalLocal","positionLocal","tangentLocal","Skinning","inputs","_ref","builder","index","weight","bindMatrix","bindMatrixInverse","boneMatrices","boneMatX","element","x","boneMatY","y","boneMatZ","z","boneMatW","w","skinVertex","mul","skinned","skinPosition","xyz","skinMatrix","skinNormal","transformDirection","assign","build","hasGeometryAttribute","SkinningNode","constructor","skinnedMesh","updateType","OBJECT","skinIndexNode","skinWeightNode","bindMatrixNode","bindMatrixInverseNode","boneMatricesNode","skeleton","bones","length","generate","call","update","skinning"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/accessors/SkinningNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { ShaderNode, nodeProxy } from '../shadernode/ShaderNode.js';\r\nimport { attribute } from '../core/AttributeNode.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { buffer } from './BufferNode.js';\r\nimport { normalLocal } from './NormalNode.js';\r\nimport { positionLocal } from './PositionNode.js';\r\nimport { tangentLocal } from './TangentNode.js';\r\n\r\nconst Skinning = new ShaderNode( ( inputs, {}, builder ) => {\r\n\r\n\tconst { index, weight, bindMatrix, bindMatrixInverse, boneMatrices } = inputs;\r\n\r\n\tconst boneMatX = boneMatrices.element( index.x );\r\n\tconst boneMatY = boneMatrices.element( index.y );\r\n\tconst boneMatZ = boneMatrices.element( index.z );\r\n\tconst boneMatW = boneMatrices.element( index.w );\r\n\r\n\t// POSITION\r\n\r\n\tconst skinVertex = bindMatrix.mul( positionLocal );\r\n\r\n\tconst skinned = add(\r\n\t\tboneMatX.mul( weight.x ).mul( skinVertex ),\r\n\t\tboneMatY.mul( weight.y ).mul( skinVertex ),\r\n\t\tboneMatZ.mul( weight.z ).mul( skinVertex ),\r\n\t\tboneMatW.mul( weight.w ).mul( skinVertex )\r\n\t);\r\n\r\n\tconst skinPosition = bindMatrixInverse.mul( skinned ).xyz;\r\n\r\n\t// NORMAL\r\n\r\n\tlet skinMatrix = add(\r\n\t\tweight.x.mul( boneMatX ),\r\n\t\tweight.y.mul( boneMatY ),\r\n\t\tweight.z.mul( boneMatZ ),\r\n\t\tweight.w.mul( boneMatW )\r\n\t);\r\n\r\n\tskinMatrix = bindMatrixInverse.mul( skinMatrix ).mul( bindMatrix );\r\n\r\n\tconst skinNormal = skinMatrix.transformDirection( normalLocal ).xyz;\r\n\r\n\t// ASSIGNS\r\n\r\n\tpositionLocal.assign( skinPosition ).build( builder ); // @TODO: For some reason this doesn't work as stack.assign( positionLocal, skinPosition )?\r\n\tnormalLocal.assign( skinNormal ).build( builder );\r\n\r\n\tif ( builder.hasGeometryAttribute( 'tangent' ) ) {\r\n\r\n\t\ttangentLocal.assign( skinNormal ).build( builder );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nclass SkinningNode extends Node {\r\n\r\n\tconstructor( skinnedMesh ) {\r\n\r\n\t\tsuper( 'void' );\r\n\r\n\t\tthis.skinnedMesh = skinnedMesh;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\t//\r\n\r\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\r\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\r\n\r\n\t\tthis.bindMatrixNode = uniform( skinnedMesh.bindMatrix, 'mat4' );\r\n\t\tthis.bindMatrixInverseNode = uniform( skinnedMesh.bindMatrixInverse, 'mat4' );\r\n\t\tthis.boneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\t/*return new ShaderNode( ( {}, stack, builder ) => Skinning.call( {\r\n\t\t\tindex: this.skinIndexNode,\r\n\t\t\tweight: this.skinWeightNode,\r\n\t\t\tbindMatrix: this.bindMatrixNode,\r\n\t\t\tbindMatrixInverse: this.bindMatrixInverseNode,\r\n\t\t\tboneMatrices: this.boneMatricesNode\r\n\t\t}, stack, builder ) ).build( builder );*/\r\n\t\tSkinning.call( {\r\n\t\t\tindex: this.skinIndexNode,\r\n\t\t\tweight: this.skinWeightNode,\r\n\t\t\tbindMatrix: this.bindMatrixNode,\r\n\t\t\tbindMatrixInverse: this.bindMatrixInverseNode,\r\n\t\t\tboneMatrices: this.boneMatricesNode\r\n\t\t}, {}, builder );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.skinnedMesh.skeleton.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SkinningNode;\r\n\r\nexport const skinning = nodeProxy( SkinningNode );\r\n\r\naddNodeClass( SkinningNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}