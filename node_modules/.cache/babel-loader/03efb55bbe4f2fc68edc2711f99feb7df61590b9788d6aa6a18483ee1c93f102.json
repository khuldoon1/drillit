{"ast":null,"code":"// @TODO: Is this needed? Can it be moved in MaterialNode?\n\nimport MaterialNode from './MaterialNode.js';\nimport { materialReference } from './MaterialReferenceNode.js';\nimport { normalView } from './NormalNode.js';\nimport { normalMap } from '../display/NormalMapNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nclass ExtendedMaterialNode extends MaterialNode {\n  constructor(scope) {\n    super(scope);\n  }\n  getNodeType(builder) {\n    const scope = this.scope;\n    let type = null;\n    if (scope === ExtendedMaterialNode.NORMAL) {\n      type = 'vec3';\n    }\n    return type || super.getNodeType(builder);\n  }\n  construct(builder) {\n    const material = builder.material;\n    const scope = this.scope;\n    let node = null;\n    if (scope === ExtendedMaterialNode.NORMAL) {\n      node = material.normalMap ? normalMap(this.getTexture('normalMap'), materialReference('normalScale', 'vec2')) : normalView;\n    }\n    return node || super.construct(builder);\n  }\n}\nExtendedMaterialNode.NORMAL = 'normal';\nexport default ExtendedMaterialNode;\nexport const materialNormal = nodeImmutable(ExtendedMaterialNode, ExtendedMaterialNode.NORMAL);\naddNodeClass(ExtendedMaterialNode);","map":{"version":3,"names":["MaterialNode","materialReference","normalView","normalMap","addNodeClass","nodeImmutable","ExtendedMaterialNode","constructor","scope","getNodeType","builder","type","NORMAL","construct","material","node","getTexture","materialNormal"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/accessors/ExtendedMaterialNode.js"],"sourcesContent":["// @TODO: Is this needed? Can it be moved in MaterialNode?\r\n\r\nimport MaterialNode from './MaterialNode.js';\r\nimport { materialReference } from './MaterialReferenceNode.js';\r\nimport { normalView } from './NormalNode.js';\r\nimport { normalMap } from '../display/NormalMapNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\r\n\r\nclass ExtendedMaterialNode extends MaterialNode {\r\n\r\n\tconstructor( scope ) {\r\n\r\n\t\tsuper( scope );\r\n\r\n\t}\r\n\r\n\tgetNodeType( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\t\tlet type = null;\r\n\r\n\t\tif ( scope === ExtendedMaterialNode.NORMAL ) {\r\n\r\n\t\t\ttype = 'vec3';\r\n\r\n\t\t}\r\n\r\n\t\treturn type || super.getNodeType( builder );\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst material = builder.material;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tlet node = null;\r\n\r\n\t\tif ( scope === ExtendedMaterialNode.NORMAL ) {\r\n\r\n\t\t\tnode = material.normalMap ? normalMap( this.getTexture( 'normalMap' ), materialReference( 'normalScale', 'vec2' ) ) : normalView;\r\n\r\n\t\t}\r\n\r\n\t\treturn node || super.construct( builder );\r\n\r\n\t}\r\n\r\n}\r\n\r\nExtendedMaterialNode.NORMAL = 'normal';\r\n\r\nexport default ExtendedMaterialNode;\r\n\r\nexport const materialNormal = nodeImmutable( ExtendedMaterialNode, ExtendedMaterialNode.NORMAL );\r\n\r\naddNodeClass( ExtendedMaterialNode );\r\n"],"mappings":"AAAA;;AAEA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,6BAA6B;AAE3D,MAAMC,oBAAoB,SAASN,YAAY,CAAC;EAE/CO,WAAWA,CAAEC,KAAK,EAAG;IAEpB,KAAK,CAAEA,KAAM,CAAC;EAEf;EAEAC,WAAWA,CAAEC,OAAO,EAAG;IAEtB,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAIG,IAAI,GAAG,IAAI;IAEf,IAAKH,KAAK,KAAKF,oBAAoB,CAACM,MAAM,EAAG;MAE5CD,IAAI,GAAG,MAAM;IAEd;IAEA,OAAOA,IAAI,IAAI,KAAK,CAACF,WAAW,CAAEC,OAAQ,CAAC;EAE5C;EAEAG,SAASA,CAAEH,OAAO,EAAG;IAEpB,MAAMI,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;IACjC,MAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIO,IAAI,GAAG,IAAI;IAEf,IAAKP,KAAK,KAAKF,oBAAoB,CAACM,MAAM,EAAG;MAE5CG,IAAI,GAAGD,QAAQ,CAACX,SAAS,GAAGA,SAAS,CAAE,IAAI,CAACa,UAAU,CAAE,WAAY,CAAC,EAAEf,iBAAiB,CAAE,aAAa,EAAE,MAAO,CAAE,CAAC,GAAGC,UAAU;IAEjI;IAEA,OAAOa,IAAI,IAAI,KAAK,CAACF,SAAS,CAAEH,OAAQ,CAAC;EAE1C;AAED;AAEAJ,oBAAoB,CAACM,MAAM,GAAG,QAAQ;AAEtC,eAAeN,oBAAoB;AAEnC,OAAO,MAAMW,cAAc,GAAGZ,aAAa,CAAEC,oBAAoB,EAAEA,oBAAoB,CAACM,MAAO,CAAC;AAEhGR,YAAY,CAAEE,oBAAqB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}