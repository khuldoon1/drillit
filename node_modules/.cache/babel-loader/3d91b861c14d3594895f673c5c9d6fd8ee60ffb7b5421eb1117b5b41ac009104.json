{"ast":null,"code":"import ContextNode from '../core/ContextNode.js';\nimport { temp } from '../core/VarNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\nclass LightingContextNode extends ContextNode {\n  constructor(node) {\n    let lightingModelNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let backdropNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let backdropAlphaNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    super(node);\n    this.lightingModelNode = lightingModelNode;\n    this.backdropNode = backdropNode;\n    this.backdropAlphaNode = backdropAlphaNode;\n  }\n  getNodeType( /*builder*/\n  ) {\n    return 'vec3';\n  }\n  construct(builder) {\n    const {\n      lightingModelNode,\n      backdropNode,\n      backdropAlphaNode\n    } = this;\n    const context = this.context = {}; // reset context\n    const properties = builder.getNodeProperties(this);\n    const directDiffuse = temp(vec3()),\n      directSpecular = temp(vec3()),\n      indirectDiffuse = temp(vec3()),\n      indirectSpecular = temp(vec3());\n    let totalDiffuse = add(directDiffuse, indirectDiffuse);\n    if (backdropNode !== null) {\n      totalDiffuse = vec3(backdropAlphaNode !== null ? mix(totalDiffuse, backdropNode, backdropAlphaNode) : backdropNode);\n    }\n    const totalSpecular = add(directSpecular, indirectSpecular);\n    const total = add(totalDiffuse, totalSpecular);\n    const reflectedLight = {\n      directDiffuse,\n      directSpecular,\n      indirectDiffuse,\n      indirectSpecular,\n      total\n    };\n    const lighting = {\n      radiance: temp(vec3()),\n      irradiance: temp(vec3()),\n      iblIrradiance: temp(vec3()),\n      ambientOcclusion: temp(float(1))\n    };\n    Object.assign(properties, reflectedLight, lighting);\n    Object.assign(context, lighting);\n    context.reflectedLight = reflectedLight;\n    context.lightingModelNode = lightingModelNode || context.lightingModelNode;\n    if (lightingModelNode && lightingModelNode.indirectDiffuse) lightingModelNode.indirectDiffuse.call(context);\n    if (lightingModelNode && lightingModelNode.indirectSpecular) lightingModelNode.indirectSpecular.call(context);\n    if (lightingModelNode && lightingModelNode.ambientOcclusion) lightingModelNode.ambientOcclusion.call(context);\n    return super.construct(builder);\n  }\n  generate(builder) {\n    const {\n      context\n    } = this;\n    const type = this.getNodeType(builder);\n    super.generate(builder, type);\n    return context.reflectedLight.total.build(builder, type);\n  }\n}\nexport default LightingContextNode;\nexport const lightingContext = nodeProxy(LightingContextNode);\naddNodeElement('lightingContext', lightingContext);\naddNodeClass(LightingContextNode);","map":{"version":3,"names":["ContextNode","temp","add","mix","addNodeClass","addNodeElement","nodeProxy","float","vec3","LightingContextNode","constructor","node","lightingModelNode","arguments","length","undefined","backdropNode","backdropAlphaNode","getNodeType","construct","builder","context","properties","getNodeProperties","directDiffuse","directSpecular","indirectDiffuse","indirectSpecular","totalDiffuse","totalSpecular","total","reflectedLight","lighting","radiance","irradiance","iblIrradiance","ambientOcclusion","Object","assign","call","generate","type","build","lightingContext"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/lighting/LightingContextNode.js"],"sourcesContent":["import ContextNode from '../core/ContextNode.js';\r\nimport { temp } from '../core/VarNode.js';\r\nimport { add } from '../math/OperatorNode.js';\r\nimport { mix } from '../math/MathNode.js';\r\nimport { addNodeClass } from '../core/Node.js';\r\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\r\n\r\nclass LightingContextNode extends ContextNode {\r\n\r\n\tconstructor( node, lightingModelNode = null, backdropNode = null, backdropAlphaNode = null ) {\r\n\r\n\t\tsuper( node );\r\n\r\n\t\tthis.lightingModelNode = lightingModelNode;\r\n\t\tthis.backdropNode = backdropNode;\r\n\t\tthis.backdropAlphaNode = backdropAlphaNode;\r\n\r\n\t}\r\n\r\n\tgetNodeType( /*builder*/ ) {\r\n\r\n\t\treturn 'vec3';\r\n\r\n\t}\r\n\r\n\tconstruct( builder ) {\r\n\r\n\t\tconst { lightingModelNode, backdropNode, backdropAlphaNode } = this;\r\n\r\n\t\tconst context = this.context = {}; // reset context\r\n\t\tconst properties = builder.getNodeProperties( this );\r\n\r\n\t\tconst directDiffuse = temp( vec3() ),\r\n\t\t\tdirectSpecular = temp( vec3() ),\r\n\t\t\tindirectDiffuse = temp( vec3() ),\r\n\t\t\tindirectSpecular = temp( vec3() );\r\n\r\n\t\tlet totalDiffuse = add( directDiffuse, indirectDiffuse );\r\n\r\n\t\tif ( backdropNode !== null ) {\r\n\r\n\t\t\ttotalDiffuse = vec3( backdropAlphaNode !== null ? mix( totalDiffuse, backdropNode, backdropAlphaNode ) : backdropNode );\r\n\r\n\t\t}\r\n\r\n\t\tconst totalSpecular = add( directSpecular, indirectSpecular );\r\n\t\tconst total = add( totalDiffuse, totalSpecular );\r\n\r\n\t\tconst reflectedLight = {\r\n\t\t\tdirectDiffuse,\r\n\t\t\tdirectSpecular,\r\n\t\t\tindirectDiffuse,\r\n\t\t\tindirectSpecular,\r\n\t\t\ttotal\r\n\t\t};\r\n\r\n\t\tconst lighting = {\r\n\t\t\tradiance: temp( vec3() ),\r\n\t\t\tirradiance: temp( vec3() ),\r\n\t\t\tiblIrradiance: temp( vec3() ),\r\n\t\t\tambientOcclusion: temp( float( 1 ) )\r\n\t\t};\r\n\r\n\t\tObject.assign( properties, reflectedLight, lighting );\r\n\t\tObject.assign( context, lighting );\r\n\r\n\t\tcontext.reflectedLight = reflectedLight;\r\n\t\tcontext.lightingModelNode = lightingModelNode || context.lightingModelNode;\r\n\r\n\t\tif ( lightingModelNode && lightingModelNode.indirectDiffuse ) lightingModelNode.indirectDiffuse.call( context );\r\n\t\tif ( lightingModelNode && lightingModelNode.indirectSpecular ) lightingModelNode.indirectSpecular.call( context );\r\n\t\tif ( lightingModelNode && lightingModelNode.ambientOcclusion ) lightingModelNode.ambientOcclusion.call( context );\r\n\r\n\t\treturn super.construct( builder );\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst { context } = this;\r\n\t\tconst type = this.getNodeType( builder );\r\n\r\n\t\tsuper.generate( builder, type );\r\n\r\n\t\treturn context.reflectedLight.total.build( builder, type );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default LightingContextNode;\r\n\r\nexport const lightingContext = nodeProxy( LightingContextNode );\r\n\r\naddNodeElement( 'lightingContext', lightingContext );\r\n\r\naddNodeClass( LightingContextNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}