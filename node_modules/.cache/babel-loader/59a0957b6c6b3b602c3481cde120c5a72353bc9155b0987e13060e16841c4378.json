{"ast":null,"code":"import { transformedNormalView } from '../../accessors/NormalNode.js';\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\nimport { ShaderNode, vec2, vec4 } from '../../shadernode/ShaderNode.js';\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nconst DFGApprox = new ShaderNode(inputs => {\n  const {\n    roughness\n  } = inputs;\n  const c0 = vec4(-1, -0.0275, -0.572, 0.022);\n  const c1 = vec4(1, 0.0425, 1.04, -0.04);\n  const r = roughness.mul(c0).add(c1);\n  const dotNV = transformedNormalView.dot(positionViewDirection).clamp();\n  const a004 = r.x.mul(r.x).min(dotNV.mul(-9.28).exp2()).mul(r.x).add(r.y);\n  const fab = vec2(-1.04, 1.04).mul(a004).add(r.zw);\n  return fab;\n});\nexport default DFGApprox;","map":{"version":3,"names":["transformedNormalView","positionViewDirection","ShaderNode","vec2","vec4","DFGApprox","inputs","roughness","c0","c1","r","mul","add","dotNV","dot","clamp","a004","x","min","exp2","y","fab","zw"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/functions/BSDF/DFGApprox.js"],"sourcesContent":["import { transformedNormalView } from '../../accessors/NormalNode.js';\r\nimport { positionViewDirection } from '../../accessors/PositionNode.js';\r\nimport { ShaderNode, vec2, vec4 } from '../../shadernode/ShaderNode.js';\r\n\r\n// Analytical approximation of the DFG LUT, one half of the\r\n// split-sum approximation used in indirect specular lighting.\r\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\r\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\r\nconst DFGApprox = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { roughness } = inputs;\r\n\r\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tconst r = roughness.mul( c0 ).add( c1 );\r\n\r\n\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp();\r\n\r\n\tconst a004 = r.x.mul( r.x ).min( dotNV.mul( - 9.28 ).exp2() ).mul( r.x ).add( r.y );\r\n\r\n\tconst fab = vec2( - 1.04, 1.04 ).mul( a004 ).add( r.zw );\r\n\r\n\treturn fab;\r\n\r\n} );\r\n\r\nexport default DFGApprox;\r\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,qBAAqB,QAAQ,iCAAiC;AACvE,SAASC,UAAU,EAAEC,IAAI,EAAEC,IAAI,QAAQ,gCAAgC;;AAEvE;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,IAAIH,UAAU,CAAII,MAAM,IAAM;EAE/C,MAAM;IAAEC;EAAU,CAAC,GAAGD,MAAM;EAE5B,MAAME,EAAE,GAAGJ,IAAI,CAAE,CAAE,CAAC,EAAE,CAAE,MAAM,EAAE,CAAE,KAAK,EAAE,KAAM,CAAC;EAEhD,MAAMK,EAAE,GAAGL,IAAI,CAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAE,IAAK,CAAC;EAE1C,MAAMM,CAAC,GAAGH,SAAS,CAACI,GAAG,CAAEH,EAAG,CAAC,CAACI,GAAG,CAAEH,EAAG,CAAC;EAEvC,MAAMI,KAAK,GAAGb,qBAAqB,CAACc,GAAG,CAAEb,qBAAsB,CAAC,CAACc,KAAK,CAAC,CAAC;EAExE,MAAMC,IAAI,GAAGN,CAAC,CAACO,CAAC,CAACN,GAAG,CAAED,CAAC,CAACO,CAAE,CAAC,CAACC,GAAG,CAAEL,KAAK,CAACF,GAAG,CAAE,CAAE,IAAK,CAAC,CAACQ,IAAI,CAAC,CAAE,CAAC,CAACR,GAAG,CAAED,CAAC,CAACO,CAAE,CAAC,CAACL,GAAG,CAAEF,CAAC,CAACU,CAAE,CAAC;EAEnF,MAAMC,GAAG,GAAGlB,IAAI,CAAE,CAAE,IAAI,EAAE,IAAK,CAAC,CAACQ,GAAG,CAAEK,IAAK,CAAC,CAACJ,GAAG,CAAEF,CAAC,CAACY,EAAG,CAAC;EAExD,OAAOD,GAAG;AAEX,CAAE,CAAC;AAEH,eAAehB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}