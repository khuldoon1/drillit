{"ast":null,"code":"import { MaterialLoader } from 'three';\nimport { createNodeMaterialFromType } from '../materials/Materials.js';\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\nMaterialLoader.createMaterialFromType = function (type) {\n  const material = createNodeMaterialFromType(type);\n  if (material !== undefined) {\n    return material;\n  }\n  return superFromTypeFunction.call(this, type);\n};\nclass NodeMaterialLoader extends MaterialLoader {\n  constructor(manager) {\n    super(manager);\n    this.nodes = {};\n  }\n  parse(json) {\n    const material = super.parse(json);\n    const nodes = this.nodes;\n    const inputNodes = json.inputNodes;\n    for (const property in inputNodes) {\n      const uuid = inputNodes[property];\n      material[property] = nodes[uuid];\n    }\n    return material;\n  }\n  setNodes(value) {\n    this.nodes = value;\n    return this;\n  }\n}\nexport default NodeMaterialLoader;","map":{"version":3,"names":["MaterialLoader","createNodeMaterialFromType","superFromTypeFunction","createMaterialFromType","type","material","undefined","call","NodeMaterialLoader","constructor","manager","nodes","parse","json","inputNodes","property","uuid","setNodes","value"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/loaders/NodeMaterialLoader.js"],"sourcesContent":["import { MaterialLoader } from 'three';\r\nimport { createNodeMaterialFromType } from '../materials/Materials.js';\r\n\r\nconst superFromTypeFunction = MaterialLoader.createMaterialFromType;\r\n\r\nMaterialLoader.createMaterialFromType = function ( type ) {\r\n\r\n\tconst material = createNodeMaterialFromType( type );\r\n\r\n\tif ( material !== undefined ) {\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\treturn superFromTypeFunction.call( this, type );\r\n\r\n};\r\n\r\nclass NodeMaterialLoader extends MaterialLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.nodes = {};\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst material = super.parse( json );\r\n\r\n\t\tconst nodes = this.nodes;\r\n\t\tconst inputNodes = json.inputNodes;\r\n\r\n\t\tfor ( const property in inputNodes ) {\r\n\r\n\t\t\tconst uuid = inputNodes[ property ];\r\n\r\n\t\t\tmaterial[ property ] = nodes[ uuid ];\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetNodes( value ) {\r\n\r\n\t\tthis.nodes = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default NodeMaterialLoader;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,OAAO;AACtC,SAASC,0BAA0B,QAAQ,2BAA2B;AAEtE,MAAMC,qBAAqB,GAAGF,cAAc,CAACG,sBAAsB;AAEnEH,cAAc,CAACG,sBAAsB,GAAG,UAAWC,IAAI,EAAG;EAEzD,MAAMC,QAAQ,GAAGJ,0BAA0B,CAAEG,IAAK,CAAC;EAEnD,IAAKC,QAAQ,KAAKC,SAAS,EAAG;IAE7B,OAAOD,QAAQ;EAEhB;EAEA,OAAOH,qBAAqB,CAACK,IAAI,CAAE,IAAI,EAAEH,IAAK,CAAC;AAEhD,CAAC;AAED,MAAMI,kBAAkB,SAASR,cAAc,CAAC;EAE/CS,WAAWA,CAAEC,OAAO,EAAG;IAEtB,KAAK,CAAEA,OAAQ,CAAC;IAEhB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EAEhB;EAEAC,KAAKA,CAAEC,IAAI,EAAG;IAEb,MAAMR,QAAQ,GAAG,KAAK,CAACO,KAAK,CAAEC,IAAK,CAAC;IAEpC,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMG,UAAU,GAAGD,IAAI,CAACC,UAAU;IAElC,KAAM,MAAMC,QAAQ,IAAID,UAAU,EAAG;MAEpC,MAAME,IAAI,GAAGF,UAAU,CAAEC,QAAQ,CAAE;MAEnCV,QAAQ,CAAEU,QAAQ,CAAE,GAAGJ,KAAK,CAAEK,IAAI,CAAE;IAErC;IAEA,OAAOX,QAAQ;EAEhB;EAEAY,QAAQA,CAAEC,KAAK,EAAG;IAEjB,IAAI,CAACP,KAAK,GAAGO,KAAK;IAElB,OAAO,IAAI;EAEZ;AAED;AAEA,eAAeV,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}