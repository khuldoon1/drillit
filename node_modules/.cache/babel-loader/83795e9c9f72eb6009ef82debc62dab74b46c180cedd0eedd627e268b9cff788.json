{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { Vector3 } from 'three';\nclass Object3DNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object3DNode.VIEW_MATRIX;\n    let object3d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super();\n    this.scope = scope;\n    this.object3d = object3d;\n    this.updateType = NodeUpdateType.OBJECT;\n    this._uniformNode = uniform(null);\n  }\n  getNodeType() {\n    const scope = this.scope;\n    if (scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX) {\n      return 'mat4';\n    } else if (scope === Object3DNode.NORMAL_MATRIX) {\n      return 'mat3';\n    } else if (scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION) {\n      return 'vec3';\n    }\n  }\n  update(frame) {\n    const object = this.object3d;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n    if (scope === Object3DNode.VIEW_MATRIX) {\n      uniformNode.value = object.modelViewMatrix;\n    } else if (scope === Object3DNode.NORMAL_MATRIX) {\n      uniformNode.value = object.normalMatrix;\n    } else if (scope === Object3DNode.WORLD_MATRIX) {\n      uniformNode.value = object.matrixWorld;\n    } else if (scope === Object3DNode.POSITION) {\n      uniformNode.value = uniformNode.value || new Vector3();\n      uniformNode.value.setFromMatrixPosition(object.matrixWorld);\n    } else if (scope === Object3DNode.DIRECTION) {\n      uniformNode.value = uniformNode.value || new Vector3();\n      object.getWorldDirection(uniformNode.value);\n    } else if (scope === Object3DNode.VIEW_POSITION) {\n      const camera = frame.camera;\n      uniformNode.value = uniformNode.value || new Vector3();\n      uniformNode.value.setFromMatrixPosition(object.matrixWorld);\n      uniformNode.value.applyMatrix4(camera.matrixWorldInverse);\n    }\n  }\n  generate(builder) {\n    const scope = this.scope;\n    if (scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    } else if (scope === Object3DNode.NORMAL_MATRIX) {\n      this._uniformNode.nodeType = 'mat3';\n    } else if (scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION) {\n      this._uniformNode.nodeType = 'vec3';\n    }\n    return this._uniformNode.build(builder);\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nObject3DNode.VIEW_MATRIX = 'viewMatrix';\nObject3DNode.NORMAL_MATRIX = 'normalMatrix';\nObject3DNode.WORLD_MATRIX = 'worldMatrix';\nObject3DNode.POSITION = 'position';\nObject3DNode.VIEW_POSITION = 'viewPosition';\nObject3DNode.DIRECTION = 'direction';\nexport default Object3DNode;\nexport const objectDirection = nodeProxy(Object3DNode, Object3DNode.DIRECTION);\nexport const objectViewMatrix = nodeProxy(Object3DNode, Object3DNode.VIEW_MATRIX);\nexport const objectNormalMatrix = nodeProxy(Object3DNode, Object3DNode.NORMAL_MATRIX);\nexport const objectWorldMatrix = nodeProxy(Object3DNode, Object3DNode.WORLD_MATRIX);\nexport const objectPosition = nodeProxy(Object3DNode, Object3DNode.POSITION);\nexport const objectViewPosition = nodeProxy(Object3DNode, Object3DNode.VIEW_POSITION);\naddNodeClass(Object3DNode);","map":{"version":3,"names":["Node","addNodeClass","NodeUpdateType","uniform","nodeProxy","Vector3","Object3DNode","constructor","scope","arguments","length","undefined","VIEW_MATRIX","object3d","updateType","OBJECT","_uniformNode","getNodeType","WORLD_MATRIX","NORMAL_MATRIX","POSITION","VIEW_POSITION","DIRECTION","update","frame","object","uniformNode","value","modelViewMatrix","normalMatrix","matrixWorld","setFromMatrixPosition","getWorldDirection","camera","applyMatrix4","matrixWorldInverse","generate","builder","nodeType","build","serialize","data","deserialize","objectDirection","objectViewMatrix","objectNormalMatrix","objectWorldMatrix","objectPosition","objectViewPosition"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/accessors/Object3DNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\r\nimport { NodeUpdateType } from '../core/constants.js';\r\nimport { uniform } from '../core/UniformNode.js';\r\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\r\n\r\nimport { Vector3 } from 'three';\r\n\r\nclass Object3DNode extends Node {\r\n\r\n\tconstructor( scope = Object3DNode.VIEW_MATRIX, object3d = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scope = scope;\r\n\t\tthis.object3d = object3d;\r\n\r\n\t\tthis.updateType = NodeUpdateType.OBJECT;\r\n\r\n\t\tthis._uniformNode = uniform( null );\r\n\r\n\t}\r\n\r\n\tgetNodeType() {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\treturn 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\treturn 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\treturn 'vec3';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( frame ) {\r\n\r\n\t\tconst object = this.object3d;\r\n\t\tconst uniformNode = this._uniformNode;\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.modelViewMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.normalMatrix;\r\n\r\n\t\t} else if ( scope === Object3DNode.WORLD_MATRIX ) {\r\n\r\n\t\t\tuniformNode.value = object.matrixWorld;\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t} else if ( scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\r\n\t\t\tobject.getWorldDirection( uniformNode.value );\r\n\r\n\t\t} else if ( scope === Object3DNode.VIEW_POSITION ) {\r\n\r\n\t\t\tconst camera = frame.camera;\r\n\r\n\t\t\tuniformNode.value = uniformNode.value || new Vector3();\r\n\t\t\tuniformNode.value.setFromMatrixPosition( object.matrixWorld );\r\n\r\n\t\t\tuniformNode.value.applyMatrix4( camera.matrixWorldInverse );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerate( builder ) {\r\n\r\n\t\tconst scope = this.scope;\r\n\r\n\t\tif ( scope === Object3DNode.WORLD_MATRIX || scope === Object3DNode.VIEW_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat4';\r\n\r\n\t\t} else if ( scope === Object3DNode.NORMAL_MATRIX ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'mat3';\r\n\r\n\t\t} else if ( scope === Object3DNode.POSITION || scope === Object3DNode.VIEW_POSITION || scope === Object3DNode.DIRECTION ) {\r\n\r\n\t\t\tthis._uniformNode.nodeType = 'vec3';\r\n\r\n\t\t}\r\n\r\n\t\treturn this._uniformNode.build( builder );\r\n\r\n\t}\r\n\r\n\tserialize( data ) {\r\n\r\n\t\tsuper.serialize( data );\r\n\r\n\t\tdata.scope = this.scope;\r\n\r\n\t}\r\n\r\n\tdeserialize( data ) {\r\n\r\n\t\tsuper.deserialize( data );\r\n\r\n\t\tthis.scope = data.scope;\r\n\r\n\t}\r\n\r\n}\r\n\r\nObject3DNode.VIEW_MATRIX = 'viewMatrix';\r\nObject3DNode.NORMAL_MATRIX = 'normalMatrix';\r\nObject3DNode.WORLD_MATRIX = 'worldMatrix';\r\nObject3DNode.POSITION = 'position';\r\nObject3DNode.VIEW_POSITION = 'viewPosition';\r\nObject3DNode.DIRECTION = 'direction';\r\n\r\nexport default Object3DNode;\r\n\r\nexport const objectDirection = nodeProxy( Object3DNode, Object3DNode.DIRECTION );\r\nexport const objectViewMatrix = nodeProxy( Object3DNode, Object3DNode.VIEW_MATRIX );\r\nexport const objectNormalMatrix = nodeProxy( Object3DNode, Object3DNode.NORMAL_MATRIX );\r\nexport const objectWorldMatrix = nodeProxy( Object3DNode, Object3DNode.WORLD_MATRIX );\r\nexport const objectPosition = nodeProxy( Object3DNode, Object3DNode.POSITION );\r\nexport const objectViewPosition = nodeProxy( Object3DNode, Object3DNode.VIEW_POSITION );\r\n\r\naddNodeClass( Object3DNode );\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}