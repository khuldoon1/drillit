{"ast":null,"code":"import getGeometryRoughness from './getGeometryRoughness.js';\nimport { ShaderNode } from '../../shadernode/ShaderNode.js';\nconst getRoughness = new ShaderNode(inputs => {\n  const {\n    roughness\n  } = inputs;\n  const geometryRoughness = getGeometryRoughness.call();\n  let roughnessFactor = roughness.max(0.0525); // 0.0525 corresponds to the base mip of a 256 cubemap.\n  roughnessFactor = roughnessFactor.add(geometryRoughness);\n  roughnessFactor = roughnessFactor.min(1.0);\n  return roughnessFactor;\n});\nexport default getRoughness;","map":{"version":3,"names":["getGeometryRoughness","ShaderNode","getRoughness","inputs","roughness","geometryRoughness","call","roughnessFactor","max","add","min"],"sources":["C:/Users/LENOVO/Desktop/reactjsProject/drillit/node_modules/three/examples/jsm/nodes/functions/material/getRoughness.js"],"sourcesContent":["import getGeometryRoughness from './getGeometryRoughness.js';\r\nimport { ShaderNode } from '../../shadernode/ShaderNode.js';\r\n\r\nconst getRoughness = new ShaderNode( ( inputs ) => {\r\n\r\n\tconst { roughness } = inputs;\r\n\r\n\tconst geometryRoughness = getGeometryRoughness.call();\r\n\r\n\tlet roughnessFactor = roughness.max( 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\r\n\troughnessFactor = roughnessFactor.add( geometryRoughness );\r\n\troughnessFactor = roughnessFactor.min( 1.0 );\r\n\r\n\treturn roughnessFactor;\r\n\r\n} );\r\n\r\nexport default getRoughness;\r\n"],"mappings":"AAAA,OAAOA,oBAAoB,MAAM,2BAA2B;AAC5D,SAASC,UAAU,QAAQ,gCAAgC;AAE3D,MAAMC,YAAY,GAAG,IAAID,UAAU,CAAIE,MAAM,IAAM;EAElD,MAAM;IAAEC;EAAU,CAAC,GAAGD,MAAM;EAE5B,MAAME,iBAAiB,GAAGL,oBAAoB,CAACM,IAAI,CAAC,CAAC;EAErD,IAAIC,eAAe,GAAGH,SAAS,CAACI,GAAG,CAAE,MAAO,CAAC,CAAC,CAAC;EAC/CD,eAAe,GAAGA,eAAe,CAACE,GAAG,CAAEJ,iBAAkB,CAAC;EAC1DE,eAAe,GAAGA,eAAe,CAACG,GAAG,CAAE,GAAI,CAAC;EAE5C,OAAOH,eAAe;AAEvB,CAAE,CAAC;AAEH,eAAeL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}